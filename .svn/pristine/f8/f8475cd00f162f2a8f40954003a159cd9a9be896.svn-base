<template>
    <div class="inputList">
        <Form ref="putDataObj" :model="putDataObj" :label-width="80" label-position="right" inline>
            <Row>
                <Col v-for="(x,index) in tableArr" :key="x.id" :xs="x.colSize.xs" :sm="x.colSize.sm" :md="x.colSize.md" :lg="x.colSize.lg">
                <FormItem v-if="x.kind == 'textInput'&&showClientWidth >= 768" :prop="x.id" :label="x.name">
                    <Input  :id="x.id" :placeholder="x.placeholder" size="small"></Input>
                </FormItem>
                <FormItem v-if="x.kind == 'textInput'&&showClientWidth < 768" :prop="x.id" :label="x.name">
                    <Input v-if="" :id="x.id" :placeholder="x.placeholder"></Input>
                </FormItem>
                <FormItem v-if="x.kind == 'date'&&showClientWidth >= 768" :prop="x.id" :label="x.name">
                    <DatePicker  :id="x.id" :placeholder="x.placeholder" size="small"></DatePicker>
                </FormItem>
                <FormItem v-if="x.kind == 'daterange'&&showClientWidth < 768":prop="x.id" :label="x.name">
                    <DatePicker v-if="inptuSzie == ''" type="daterange" :id="x.id" :placeholder="x.placeholder"></DatePicker>
                    <DatePicker v-if="inptuSzie != ''" type="daterange" :id="x.id" :placeholder="x.placeholder" :size="inptuSzie"></DatePicker>
                </FormItem>
                <FormItem v-if="x.kind == 'daterange'&&showClientWidth >= 768"  :prop="x.id" :label="x.name">
                    <DatePicker v-if="inptuSzie == ''" type="daterange" :id="x.id" :placeholder="x.placeholder"></DatePicker>
                    <DatePicker v-if="inptuSzie != ''" type="daterange" :id="x.id" :placeholder="x.placeholder"  :size="inptuSzie"></DatePicker>
                </FormItem>
                 <FormItem v-if="x.kind == 'date'&&showClientWidth < 768" :prop="x.id" :label="x.name">
                    <DatePicker :id="x.id" :placeholder="x.placeholder"></DatePicker>
                   
                </FormItem>
                  <FormItem v-if="x.kind == 'select'&&showClientWidth >= 768":prop="x.id" :label="x.name">
                    <Select :id="x.id"  style="width:160px" :placeholder="x.placeholder" size="small" >
                        <Option v-for="y in x.val" :value="y.value" :key="y.value">{{ y.value }}</Option>
                    </Select>
                </FormItem>
                <FormItem v-if="x.kind == 'select'&&showClientWidth < 768" :prop="x.id" :label="x.name">
                    <Select :id="x.id"  style="width:160px" :placeholder="x.placeholder">
                        <Option v-for="y in x.val" :value="y.value" :key="y.value">{{ y.value }}</Option>
                    </Select>
                </FormItem>
                </Col>
                <FormItem class="buttons" v-if="showClientWidth < 768">
                    <Button v-if="btnSize == ''" type="info" icon="ios-search" class="searchBtn" @click="handleSubmit('putDataObj')">搜索</Button>
                    <Button v-if="btnSize != ''" type="info" icon="ios-search" class="searchBtn" @click="handleSubmit('putDataObj')" :size="btnSize">搜索</Button>
                </FormItem>
                <FormItem class="buttons" v-if="showClientWidth >= 768">
                    <Button v-if="btnSize == ''" type="info" icon="ios-search" class="searchBtn" @click="handleSubmit('putDataObj')">搜索</Button>
                    <Button v-if="btnSize != ''" type="info" icon="ios-search" class="searchBtn" @click="handleSubmit('putDataObj')" :size="btnSize">搜索</Button>
                </FormItem>
            </Row>

        </Form>
    </div>
</template>

<script>
import { mapGetters } from "vuex";
export default {
    name: "formInput",
    props: {
        tableArr: Array,
        btnSize:{
            type: String,
            default:''
        },
        inptuSzie:{
            type:String,
            default:''
        }
    },
    computed: {
        ...mapGetters([
            "showClientWidth" //窗口大小
        ])
    },
    data() {
        return {
            putDataObj: {},
            value: "",
            inputSize: document.documentElement.clientWidth,
            options1: {
                shortcuts: [
                    {
                        text: "Today",
                        value() {
                            return new Date();
                        },
                        onClick: picker => {
                            this.$Message.info("Click today");
                        }
                    },
                    {
                        text: "Yesterday",
                        value() {
                            const date = new Date();
                            date.setTime(date.getTime() - 3600 * 1000 * 24);
                            return date;
                        },
                        onClick: picker => {
                            this.$Message.info("Click yesterday");
                        }
                    },
                    {
                        text: "One week",
                        value() {
                            const date = new Date();
                            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);
                            return date;
                        },
                        onClick: picker => {
                            this.$Message.info("Click a week ago");
                        }
                    }
                ]
            }
        };
    },
    mounted() {
        // console.log(this.tableArr);
        // window.onresize = () => {
        //     this.inputSize = document.documentElement.clientWidth;
        // };
        // console.log(this.showSzie);
        // if(this.inputSize < 768) {
        //     // console.log('111111111111');
        //     console.log(document.getElementsByTagName('Input'));
        // }
    },
    methods: {
        commit() {
            //根据this.tableArr[y].id找到所有节点下的input并获取value
            let dataArr = [];
            let putDataObj = new Object();
            for (let y in this.tableArr) {
                putDataObj[this.tableArr[y].id] = document
                    .getElementById(this.tableArr[y].id)
                    .getElementsByTagName("input")[0].value;
            }
            this.putDataObj = putDataObj;
            console.log(putDataObj);
            // this.$store.commit("SET_SERCHDATA", '');//先清空
            this.$store.commit("SET_SERCHDATA", putDataObj); //提交到store下 mutations状态下的SET_SERCHDATA方法 并将putDataObj存储到state下;
        },
        met(x, index) {},
        asd($event) {},
        handleSubmit(name) {
            let dataArr = [];
            let putDataObj = new Object();
            for (let y in this.tableArr) {
                putDataObj[this.tableArr[y].id] = document
                    .getElementById(this.tableArr[y].id)
                    .getElementsByTagName("input")[0].value;
            }
            this.$refs[name].validate(valid => {
                // console.log('1111111111111');
                console.log(valid);
                if (valid) {
                    this.$Message.success("Success!");

                    this.$store.commit("SET_SERCHDATA", putDataObj);
                } else {
                    this.$Message.error("Fail!");
                }
            });
            // console.log(this.$refs[name]);
        }
    }
};
</script>

<style lang="scss" scoped>
@import "static/css/scss/media-queries";
.inputList {
    // position: relative;
    // text-align: center;
    .ivu-input-group {
        margin: 0 auto;
    }

    .ivu-form-item{
        margin-bottom: 20px;
    }
    .ivu-form-inline .ivu-form-item{
        margin-right: 0;
    }
    // @include inputList();
}
</style>

